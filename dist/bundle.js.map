{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/main.ts","src/ts/services/rosEvent.ts"],"names":[],"mappings":"AAAA;ACAA,AAA2C;;;AAE3C,yBAAyB,AAAqB,AAAC;AAG/C;AACE,AAAC,MAAC,AAAQ,AAAC,UAAC,AAAK,MAAC;AAChB,YAAI,AAAG,MAAe,IAAI,AAAM,OAAC,AAAG,IAAC,AAAE,AAAC,AAAC;AACzC,YAAI,AAAS,YAAa,IAAI,WAAQ,SAAC,AAAG,AAAC,AAAC,AAC9C;AAAC,AAAC,AAAC,AACL;AAAC;AAED,AAAI,AAAE,AAAC;;;ACZP,AAA4C;AAQ5C;;;;;;;AAKI,sBAAY,AAAe;;;;;AAYpB,aAAmB,sBAAG;AACzB,gBAAI,AAAC;AACD,AAAC,kBAAC,AAAe,AAAC,iBAAC,AAAW,YAAC,AAAO,AAAC,AAAC;AACxC,AAAC,kBAAC,AAAe,AAAC,iBAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AAC5C,AAAC,kBAAC,AAAY,AAAC,cAAC,AAAW,YAAC,AAAc,AAAC,AAAC;AAC5C,AAAC,kBAAC,AAAY,AAAC,cAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AACzC,AAAQ,yBAAC,AAAI,KAAC,AAAO,QAAC,AAAO,UAAC,AAAC,EAAC,AAAkB,AAAC,oBAAC,AAAG,AAAE,AAAC,AAAC,AAC/D;AAAE,cAAA,AAAK,OAAC,AAAC,AAAC,GAAC,AAAC;AACR,AAAC,kBAAC,AAAe,AAAC,iBAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AAC5C,AAAC,kBAAC,AAAe,AAAC,iBAAC,AAAQ,SAAC,AAAO,AAAC,AAAC;AACrC,AAAC,kBAAC,AAAY,AAAC,cAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AACzC,AAAC,kBAAC,AAAY,AAAC,cAAC,AAAQ,SAAC,AAAc,AAAC,AAAC;AACzC,AAAO,wBAAC,AAAG,IAAC,AAAC,AAAC,AAAC,AACnB;AAAC,AACL;AAAC;AAUO,aAAe,kBAAG;AACtB,AAAC,cAAC,AAAe,AAAC,iBAAC,AAAW,YAAC,AAAO,AAAC,AAAC;AACxC,AAAC,cAAC,AAAe,AAAC,iBAAC,AAAQ,SAAC,AAAW,AAAC,AAAC;AACzC,AAAe;AACf,AAAI,kBAAC,AAAS,AAAE,AAAC;AACjB,AAAC,cAAC,AAAY,AAAC,cAAC,AAAW,YAAC,AAAc,AAAC,AAAC;AAC5C,AAAC,cAAC,AAAY,AAAC,cAAC,AAAQ,SAAC,AAAW,AAAC,AAAC;AACtC,AAAQ,qBAAC,AAAU,aAAG,AAAI,AAAC,AAC/B;AAAC;AAEO,aAAU,aAAG;AACjB,AAAC,cAAC,AAAe,AAAC,iBAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AAC5C,AAAC,cAAC,AAAe,AAAC,iBAAC,AAAQ,SAAC,AAAO,AAAC,AAAC;AACrC,AAAC,cAAC,AAAY,AAAC,cAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AACzC,AAAC,cAAC,AAAY,AAAC,cAAC,AAAQ,SAAC,AAAc,AAAC,AAAC;AACzC,AAAQ,qBAAC,AAAU,aAAG,AAAK,AAAC,AAChC;AAAC;AAEO,aAAU,aAAG,UAAC,AAAU;AAC5B,AAAC,cAAC,AAAe,AAAC,iBAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AAC5C,AAAC,cAAC,AAAe,AAAC,iBAAC,AAAQ,SAAC,AAAO,AAAC,AAAC;AACrC,AAAC,cAAC,AAAY,AAAC,cAAC,AAAW,YAAC,AAAW,AAAC,AAAC;AACzC,AAAC,cAAC,AAAY,AAAC,cAAC,AAAQ,SAAC,AAAc,AAAC,AAAC;AACzC,AAAQ,qBAAC,AAAI,KAAC,AAAK,AAAE,AAAC;AACtB,AAAQ,qBAAC,AAAU,aAAG,AAAK,AAAC;AAC5B,AAAO,oBAAC,AAAG,IAAC,AAAK,AAAC,AAAC,AACvB;AAAC;AAEO,aAAS,YAAG;AAChB,gBAAI,AAAU,aAAa,CAAC,AAAqB,uBAAE,AAAmB,qBAAE,AAAuB,yBAAC,AAAiB,AAAC,AAAC;AACnH,gBAAI,AAAkB,qBAAW,AAAU,WAAC,AAAM,AAAC;AACnD,gBAAI,AAAI,OAA0B,IAAI,AAAG,AAAoB,AAAC;AAE9D,AAAG,AAAC,iBAAC,IAAI,AAAC,IAAG,AAAC,GAAE,AAAC,IAAG,AAAU,WAAC,AAAM,QAAE,AAAC,AAAE,KAAE,AAAC;AACzC,AAAQ,yBAAC,AAAI,KAAC,AAAgB,iBAAC,AAAU,WAAC,AAAC,AAAC,IAAC,UAAS,AAAY;AAC9D,AAAQ,6BAAC,AAAI,KAAC,AAAY,aAAC,AAAY,aAAC,AAAC,AAAC,IAAE,UAAS,AAAU;AAC3D,AAAI,6BAAC,AAAG,IAAC,AAAU,YAAE,AAAY,AAAC,AAAC;AACnC,0BAAE,AAAkB,AAAC;AACrB,AAAE,4BAAC,AAAkB,sBAAI,AAAC,AAAC,GAAC,AAAC;AACzB,gCAAI,AAAM,SAAG,AAAK,MAAC,AAAS,UAAC,AAAI,KAAC,EAAC,AAAK,OAAE,AAAS,UAAC,AAAI,AAAC,AAAC,AAAC,AAAC;AAC3D,AAAC,8BAAC,AAAgB,AAAC,kBAAC,AAAI,KAAC,AAAM,AAAC,AAAC,AACtC;AAAC,AACL;AAAC,AAAC,AAAC,AACP;AAAC,AAAC,AAAC,AACP;AAAC,AACL;AAAC;AAhFG,AAAQ,iBAAC,AAAI,OAAG,AAAG,AAAC;AACpB,AAAQ,iBAAC,AAAI,KAAC,AAAE,GAAC,AAAY,cAAE,AAAI,KAAC,AAAe,AAAC,AAAC;AACrD,AAAQ,iBAAC,AAAI,KAAC,AAAE,GAAC,AAAO,SAAE,AAAI,KAAC,AAAU,AAAC,AAAC;AAC3C,AAAQ,iBAAC,AAAI,KAAC,AAAE,GAAC,AAAO,SAAE,AAAI,KAAC,AAAU,AAAC,AAAC;AAC3C,AAAI,aAAC,AAAa,cAAC,AAAe,iBAAE,AAAO,SAAE,AAAI,KAAC,AAAmB,AAAC,AAAC,AAC3E;AAAC,AAEM,AAAa;;;;sCAAC,AAAoC,UAAE,AAAa,OAAE,AAAkB;AACxF,AAAC,cAAC,AAAQ,AAAC,UAAC,AAAQ,SAAC,AAAQ,UAAE,AAAK,OAAE,AAAM,AAAC,AAAC,AAClD;AAAC,AAkBD,AAAc,AAAW;;;;AACrB,AAAM,mBAAC,AAAQ,SAAC,AAAI,AAAC,AACzB;AAAC,AAED,AAAc,AAAS;;;;AACnB,AAAM,mBAAC,AAAQ,SAAC,AAAU,AAAC,AAC/B;AAAC,AAgDL,AAAC;;;;;;AApFkB,SAAU,aAAU,AAAK,AAAC;AAHhC,QAAQ,WAuFpB;AAED,AAA4C;AAC5C,mBAAmB,AAA2B;AAC1C,QAAI,AAAW,cAAa,AAAE,AAAC;;;;;;AAC/B,AAAG,AAAC,6BAAW,AAAI,KAAC,AAAI,AAAE,AAAC;AAAC,AAAC,gBAArB,AAAG;;AACP,AAAE,gBAAC,AAAI,KAAC,AAAG,IAAC,AAAG,AAAC,KAAC,AAAM,SAAG,AAAC,AAAC;AAC5B,oBAAI,AAAS,YAAa,AAAE,AAAC;AADA,AAAC;;;;;AAE9B,AAAG,AAAC,0CAAS,AAAI,KAAC,AAAG,IAAC,AAAG,AAAC,AAAC;AAAC,AAAC,4BAArB,AAAC;;AACL,4BAAI,AAAS;AACT,AAAK,mCAAE,AAAC,AACX;AAFe;AAGhB,AAAS,kCAAC,AAAI,KAAC,AAAS,AAAC,AAAC,AAC9B;AAAC;;;;;;;;;;;;;;;;AAED,oBAAI,AAAI;AACJ,AAAI,0BAAE,AAAG;AACT,AAAM,4BAAE,AAAS,AACpB;AAHU;AAIX,AAAW,4BAAC,AAAI,KAAC,AAAI,AAAC,AAAC,AACvB;AAAC,AACL;AAAC;;;;;;;;;;;;;;;;AACD,AAAM,WAAC,AAAW,AAAC,AACvB;AAAC","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"./typings/tsd.d.ts\" />\n\nimport { ROSEvent } from \"./services/rosEvent\";\n\n\nfunction init() {\n  $(document).ready(function () {\n    let ros: ROSLIB.Ros = new ROSLIB.Ros(\"\");\n    let rosEvents: ROSEvent = new ROSEvent(ros);\n  });\n}\n\ninit();","/// <reference path=\"../typings/tsd.d.ts\" />\n\n/*Handling connection and events that are ROS related,\nlike connecting, disconnecting or building the topic menu dynamically.\nTo add supported ROS message types, add the type to the topicTypes Array.*/\n\ndeclare var MyApp: any;\n\nexport class ROSEvent {\n\n    private static _ros: ROSLIB.Ros;\n    private static _connected: boolean=false;\n    \n    constructor(ros: ROSLIB.Ros) {\n        ROSEvent._ros = ros;\n        ROSEvent._ros.on(\"connection\", this.onRosConnection);\n        ROSEvent._ros.on(\"close\", this.onRosClose);  \n        ROSEvent._ros.on(\"error\", this.onRosError);\n        this.DelegateEvent(\".jsRosConnect\", \"click\", this.establishConnection);\n    }\n\n    public DelegateEvent(selector: string | Document | Window, event: string, method: () => void) {\n        $(document).delegate(selector, event, method);\n    }\n    \n    public establishConnection = () => {\n        try {\n            $('.jsRosConnect').removeClass('error');\n            $('.jsRosConnect').removeClass('connected');\n            $('.jsRosMenu').removeClass('disconnected');\n            $('.jsRosMenu').removeClass('connected');\n            ROSEvent._ros.connect(\"ws://\"+$(\"#rosMasterAdress\").val());\n        } catch(e) {\n            $('.jsRosConnect').removeClass('connected');\n            $('.jsRosConnect').addClass('error');\n            $('.jsRosMenu').removeClass('connected');\n            $('.jsRosMenu').addClass('disconnected');\n            console.log(e);\n        }\n    }\n\n    public static getInstance() {\n        return ROSEvent._ros;\n    }\n\n    public static getStatus() {\n        return ROSEvent._connected;\n    }\n\n    private onRosConnection = () => {\n        $('.jsRosConnect').removeClass('error');\n        $('.jsRosConnect').addClass('connected');\n        //generate menu\n        this.buildMenu();\n        $('.jsRosMenu').removeClass('disconnected');\n        $('.jsRosMenu').addClass('connected');\n        ROSEvent._connected = true;\n    }\n\n    private onRosClose = () => {\n        $('.jsRosConnect').removeClass('connected');\n        $('.jsRosConnect').addClass('error');\n        $('.jsRosMenu').removeClass('connected');\n        $('.jsRosMenu').addClass('disconnected');\n        ROSEvent._connected = false;\n    }\n\n    private onRosError = (error: any) => {\n        $('.jsRosConnect').removeClass('connected');\n        $('.jsRosConnect').addClass('error');\n        $('.jsRosMenu').removeClass('connected');\n        $('.jsRosMenu').addClass('disconnected');\n        ROSEvent._ros.close();\n        ROSEvent._connected = false;\n        console.log(error);\n    }\n\n    private buildMenu = ()  => {   \n        let topicTypes: string[] = ['geometry_msgs/Twist', 'sensor_msgs/Image', 'sensor_msgs/NavSatFix','sensor_msgs/Imu'];\n        let callbacksRemaining: number = topicTypes.length;\n        let dict: Map<string, string[]> = new Map<string, string[]>();\n\n        for (var i = 0; i < topicTypes.length; i++) {\n            ROSEvent._ros.getTopicsForType(topicTypes[i],function(topicsResult) {\n                ROSEvent._ros.getTopicType(topicsResult[0], function(typeResult) {\n                    dict.set(typeResult, topicsResult);\n                    --callbacksRemaining;\n                    if(callbacksRemaining == 0) {\n                        let result = MyApp.templates.menu({types: buildJSON(dict)});\n                         $('.dropdown-menu').html(result);\n                    }\n                });\n            });\n        }\n    }\n}\n\n//build JSON to get rendered with handlebars\nfunction buildJSON(dict: Map<string, string[]>) {\n    let topicResult: Object[] = [];    \n    for(let key of dict.keys()) {\n        if(dict.get(key).length > 0) {\n        let topicsArr: Object[] = [];\n        for(let t of dict.get(key)) {\n            let topicItem = {\n                topic: t\n            }\n            topicsArr.push(topicItem);\n        }\n\n        let item = {\n            type: key,\n            topics: topicsArr\n        }\n        topicResult.push(item);\n        }\n    }\n    return topicResult;\n}\n"]}